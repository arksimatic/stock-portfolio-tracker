@model StockPortfolioTracker.ViewModels.WalletViewModel

@{
    ViewData["Title"] = $"Wallet {Model.Name}";
}

<style>
    .table {
        width: 100%;
        table-layout: auto;
    }

    .actions {
        width: 1px;
        white-space: nowrap;
    }

    .wallet-name, .wallet-value {
        font-size: 2em;
        font-weight: bold;
    }

    .table th {
        font-size: 1.3em;
        background-color: #f8f9fa;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0,0,0,.05);
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="display-4 text-center">@Model.Name stocks</h1>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <ejs-accumulationchart id="stock-chart">
                <e-accumulation-series-collection>
                    <e-accumulation-series dataSource="@Model.ChartData"
                                           xName="StockName" yName="StockValue"
                                           innerRadius="55%" legendShape="Circle">
                        <e-accumulationseries-datalabel name="StockName" visible />
                    </e-accumulation-series>
                </e-accumulation-series-collection>
                <e-accumulationchart-legendsettings position="Bottom" toggleVisibility="false" />
                <e-accumulationchart-tooltipsettings enable></e-accumulationchart-tooltipsettings>
            </ejs-accumulationchart>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th class="align-middle">Stock</th>
                        <th class="align-middle">Shares</th>
                        <th class="align-middle">Share current value</th>
                        <th class="align-middle">Share cost value</th>
                        <th class="align-middle">Total current value</th>
                        <th class="align-middle">Total cost value</th>
                        <th class="align-middle">Paid dividends</th>
                        <th class="align-middle">Buy date time</th>
                        <th class="text-right align-middle actions">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.WalletStocks)
                    {
                        <tr>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.Ticker)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.Shares)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.CurrentShareValue)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.AverageShareCost)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.CurrentTotalValue)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.AverageTotalCost)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.DividendsSum)</td>
                            <td class="align-middle">@Html.DisplayFor(modelItem => item.BuyDateTime)</td>
                            <td class="text-right align-middle actions">
                                <p class="d-flex align-items-center justify-content-end mb-0">
                                    <a asp-action="Edit" asp-route-wallet_x_stockId="@item.Wallet_X_StockId" class="btn btn-primary" style="margin-right: 10px;">Edit</a>
                                    <a asp-action="Delete" asp-route-wallet_x_stockId="@item.Wallet_X_StockId" class="btn btn-danger delete-btn" data-stock-name="@item.Ticker">Delete</a>
                                </p>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td class="align-middle"><b>SUM</b></td>
                        <td class="align-middle"><b>@Model.WalletStocks.Select(model => model.Shares).Sum()</b></td>
                        <td class="align-middle"><b>-</b></td>
                        <td class="align-middle"><b>-</b></td>
                        <td class="align-middle"><b>@Model.WalletStocks.Select(model => model.CurrentTotalValue).Sum()</b></td>
                        <td class="align-middle"><b>@Model.WalletStocks.Select(model => model.AverageTotalCost).Sum()</b></td>
                        <td class="align-middle"><b>@Model.WalletStocks.Select(model => model.DividendsSum).Sum()</b></td>
                        <td class="align-middle"><b>-</b></td>
                        <td class="text-right align-middle actions"></td>
                    </tr>
                </tbody>
            </table>
            <div class="form-group mt-3 d-flex justify-content-between">
                <a asp-controller="Wallets" asp-action="Index" class="btn btn-secondary">Back</a>
                <a asp-action="Create" asp-route-walletId="@Model.WalletId" class="btn btn-primary">Create New</a>
            </div>
            
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', function (e) {
            var stockName = this.getAttribute('data-stock-name');
            if (!confirm(`Do you wish to delete stock ${stockName}?`)) {
                e.preventDefault();
            }
        });
    });
</script>
